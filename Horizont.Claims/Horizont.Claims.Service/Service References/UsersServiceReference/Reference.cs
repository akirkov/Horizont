//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Horizont.Claims.Service.UsersServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class UserObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.AddressObject AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FathernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FlatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.AddressObject Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fathername {
            get {
                return this.FathernameField;
            }
            set {
                if ((object.ReferenceEquals(this.FathernameField, value) != true)) {
                    this.FathernameField = value;
                    this.RaisePropertyChanged("Fathername");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Flat {
            get {
                return this.FlatField;
            }
            set {
                if ((this.FlatField.Equals(value) != true)) {
                    this.FlatField = value;
                    this.RaisePropertyChanged("Flat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class AddressObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.RegionObject RegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocalId {
            get {
                return this.LocalIdField;
            }
            set {
                if ((this.LocalIdField.Equals(value) != true)) {
                    this.LocalIdField = value;
                    this.RaisePropertyChanged("LocalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.RegionObject Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class RegionObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.CityObject CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.ServerObject ServerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.CityObject City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocalId {
            get {
                return this.LocalIdField;
            }
            set {
                if ((this.LocalIdField.Equals(value) != true)) {
                    this.LocalIdField = value;
                    this.RaisePropertyChanged("LocalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.ServerObject Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class CityObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServerObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class ServerObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimsServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ElvServiceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimsService {
            get {
                return this.ClaimsServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimsServiceField, value) != true)) {
                    this.ClaimsServiceField = value;
                    this.RaisePropertyChanged("ClaimsService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ElvService {
            get {
                return this.ElvServiceField;
            }
            set {
                if ((object.ReferenceEquals(this.ElvServiceField, value) != true)) {
                    this.ElvServiceField = value;
                    this.RaisePropertyChanged("ElvService");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class RuleObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.CityObject CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.DispObject DispField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.RegionObject RegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.CityObject City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.DispObject Disp {
            get {
                return this.DispField;
            }
            set {
                if ((object.ReferenceEquals(this.DispField, value) != true)) {
                    this.DispField = value;
                    this.RaisePropertyChanged("Disp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.RegionObject Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DispObject", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class DispObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Horizont.Claims.Service.UsersServiceReference.RegionObject RegionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Horizont.Claims.Service.UsersServiceReference.RegionObject Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleObjectEx", Namespace="http://schemas.datacontract.org/2004/07/SystemClientLibrary")]
    [System.SerializableAttribute()]
    public partial class RuleObjectEx : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DispIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PermissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RegionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((this.CityIdField.Equals(value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DispId {
            get {
                return this.DispIdField;
            }
            set {
                if ((this.DispIdField.Equals(value) != true)) {
                    this.DispIdField = value;
                    this.RaisePropertyChanged("DispId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Permission {
            get {
                return this.PermissionField;
            }
            set {
                if ((this.PermissionField.Equals(value) != true)) {
                    this.PermissionField = value;
                    this.RaisePropertyChanged("Permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://horzt.ru", ConfigurationName="UsersServiceReference.UsersService")]
    public interface UsersService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://horzt.ru/UsersService/IsUserInRole", ReplyAction="http://horzt.ru/UsersService/IsUserInRoleResponse")]
        bool IsUserInRole(string username, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://horzt.ru/UsersService/GetUserRoles", ReplyAction="http://horzt.ru/UsersService/GetUserRolesResponse")]
        string[] GetUserRoles(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://horzt.ru/UsersService/CanUserServerRead", ReplyAction="http://horzt.ru/UsersService/CanUserServerReadResponse")]
        bool CanUserServerRead(string username, int server_id, System.Nullable<int> region_id, System.Nullable<int> disp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://horzt.ru/UsersService/CanUserServerEdit", ReplyAction="http://horzt.ru/UsersService/CanUserServerEditResponse")]
        bool CanUserServerEdit(string username, int server_id, System.Nullable<int> region_id, System.Nullable<int> disp_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://horzt.ru/UsersService/CanUserFlatRead", ReplyAction="http://horzt.ru/UsersService/CanUserFlatReadResponse")]
        bool CanUserFlatRead(string username, int server_id, int address_id, int flat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://horzt.ru/UsersService/CanUserFlatEdit", ReplyAction="http://horzt.ru/UsersService/CanUserFlatEditResponse")]
        bool CanUserFlatEdit(string username, int server_id, int address_id, int flat);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UsersServiceChannel : Horizont.Claims.Service.UsersServiceReference.UsersService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersServiceClient : System.ServiceModel.ClientBase<Horizont.Claims.Service.UsersServiceReference.UsersService>, Horizont.Claims.Service.UsersServiceReference.UsersService {
        
        public UsersServiceClient() {
        }
        
        public UsersServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsUserInRole(string username, string role) {
            return base.Channel.IsUserInRole(username, role);
        }
        
        public string[] GetUserRoles(string username) {
            return base.Channel.GetUserRoles(username);
        }
        
        public bool CanUserServerRead(string username, int server_id, System.Nullable<int> region_id, System.Nullable<int> disp_id) {
            return base.Channel.CanUserServerRead(username, server_id, region_id, disp_id);
        }
        
        public bool CanUserServerEdit(string username, int server_id, System.Nullable<int> region_id, System.Nullable<int> disp_id) {
            return base.Channel.CanUserServerEdit(username, server_id, region_id, disp_id);
        }
        
        public bool CanUserFlatRead(string username, int server_id, int address_id, int flat) {
            return base.Channel.CanUserFlatRead(username, server_id, address_id, flat);
        }
        
        public bool CanUserFlatEdit(string username, int server_id, int address_id, int flat) {
            return base.Channel.CanUserFlatEdit(username, server_id, address_id, flat);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="HorizontSite", ConfigurationName="UsersServiceReference.UsersWebService")]
    public interface UsersWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/CreateUser", ReplyAction="HorizontSite/UsersWebService/CreateUserResponse")]
        bool CreateUser(Horizont.Claims.Service.UsersServiceReference.UserObject user);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/ChangeUser", ReplyAction="HorizontSite/UsersWebService/ChangeUserResponse")]
        bool ChangeUser(Horizont.Claims.Service.UsersServiceReference.UserObject user);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/DeleteUser", ReplyAction="HorizontSite/UsersWebService/DeleteUserResponse")]
        bool DeleteUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/AddUserRule", ReplyAction="HorizontSite/UsersWebService/AddUserRuleResponse")]
        bool AddUserRule(string username, Horizont.Claims.Service.UsersServiceReference.RuleObject rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/ChangeUserRule", ReplyAction="HorizontSite/UsersWebService/ChangeUserRuleResponse")]
        bool ChangeUserRule(Horizont.Claims.Service.UsersServiceReference.RuleObject rule);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/DeleteUserRule", ReplyAction="HorizontSite/UsersWebService/DeleteUserRuleResponse")]
        bool DeleteUserRule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/GetUser", ReplyAction="HorizontSite/UsersWebService/GetUserResponse")]
        Horizont.Claims.Service.UsersServiceReference.UserObject GetUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/GetUsers", ReplyAction="HorizontSite/UsersWebService/GetUsersResponse")]
        Horizont.Claims.Service.UsersServiceReference.UserObject[] GetUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/GetUserRule", ReplyAction="HorizontSite/UsersWebService/GetUserRuleResponse")]
        Horizont.Claims.Service.UsersServiceReference.RuleObject GetUserRule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/GetUserRules", ReplyAction="HorizontSite/UsersWebService/GetUserRulesResponse")]
        Horizont.Claims.Service.UsersServiceReference.RuleObject[] GetUserRules(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/GetUserRulesEx", ReplyAction="HorizontSite/UsersWebService/GetUserRulesExResponse")]
        Horizont.Claims.Service.UsersServiceReference.RuleObjectEx[] GetUserRulesEx(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="HorizontSite/UsersWebService/GetCurrentUserRulesEx", ReplyAction="HorizontSite/UsersWebService/GetCurrentUserRulesExResponse")]
        Horizont.Claims.Service.UsersServiceReference.RuleObjectEx[] GetCurrentUserRulesEx();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface UsersWebServiceChannel : Horizont.Claims.Service.UsersServiceReference.UsersWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersWebServiceClient : System.ServiceModel.ClientBase<Horizont.Claims.Service.UsersServiceReference.UsersWebService>, Horizont.Claims.Service.UsersServiceReference.UsersWebService {
        
        public UsersWebServiceClient() {
        }
        
        public UsersWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateUser(Horizont.Claims.Service.UsersServiceReference.UserObject user) {
            return base.Channel.CreateUser(user);
        }
        
        public bool ChangeUser(Horizont.Claims.Service.UsersServiceReference.UserObject user) {
            return base.Channel.ChangeUser(user);
        }
        
        public bool DeleteUser(string userName) {
            return base.Channel.DeleteUser(userName);
        }
        
        public bool AddUserRule(string username, Horizont.Claims.Service.UsersServiceReference.RuleObject rule) {
            return base.Channel.AddUserRule(username, rule);
        }
        
        public bool ChangeUserRule(Horizont.Claims.Service.UsersServiceReference.RuleObject rule) {
            return base.Channel.ChangeUserRule(rule);
        }
        
        public bool DeleteUserRule(int id) {
            return base.Channel.DeleteUserRule(id);
        }
        
        public Horizont.Claims.Service.UsersServiceReference.UserObject GetUser(string username) {
            return base.Channel.GetUser(username);
        }
        
        public Horizont.Claims.Service.UsersServiceReference.UserObject[] GetUsers() {
            return base.Channel.GetUsers();
        }
        
        public Horizont.Claims.Service.UsersServiceReference.RuleObject GetUserRule(int id) {
            return base.Channel.GetUserRule(id);
        }
        
        public Horizont.Claims.Service.UsersServiceReference.RuleObject[] GetUserRules(string username) {
            return base.Channel.GetUserRules(username);
        }
        
        public Horizont.Claims.Service.UsersServiceReference.RuleObjectEx[] GetUserRulesEx(string username) {
            return base.Channel.GetUserRulesEx(username);
        }
        
        public Horizont.Claims.Service.UsersServiceReference.RuleObjectEx[] GetCurrentUserRulesEx() {
            return base.Channel.GetCurrentUserRulesEx();
        }
    }
}
